<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFrogFront</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>survivors = 10;
saved_survivors = 0;
dead_survivors = 0;

hit = 5

hp = 50
time = 0
moving = false
name = 5
spd = 7
range = 70

active = true

score = 0

portal_check = 0

up=ord('W');
down=ord('S');
right=ord('D');
left=ord('A');




speedboost = false
speedboosttime = 200
sbt = 200
shootfour = false
shootfourtime = 300
sft = 300
normal = true 
attack=vk_space;
create_enter_portal=ord('N');
create_exit_portal=ord('M');




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if oPlayer.moving == true{
        oPlayer.moving = false;
       }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active{


if keyboard_check(oPlayer.attack){
    if normal  &amp;&amp; !instance_exists(oAttack){
        instance_create(x,y,oAttack);  
        }
        
   
     
    else if shootfour &amp;&amp; (!instance_exists(oAttackUp) || !instance_exists(oAttackDown)|| !instance_exists(oAttackRight)|| !instance_exists(oAttackLeft)){
        if shootfourtime &lt; sft{
            instance_create(x,y,oAttackUp);
            instance_create(x,y,oAttackRightup)
            instance_create(x,y,oAttackLeftUp);
            instance_create(x,y,oAttackDown);
            instance_create(x,y,oAttackRightDown);
            instance_create(x,y,oAttackLeftDown);
            instance_create(x,y,oAttackRight);
            instance_create(x,y,oAttackLeft);
            shootfourtime +=1
            }
        else{
            shootfour = false;
            normal = true;
            }
    }
}

if keyboard_check(oPlayer.create_enter_portal) &amp;&amp; !instance_exists(oShootPortal){
    portal_check = 0;
    if !instance_exists(oEnterPortal){
        instance_create(x,y,oShootPortal)
    }
    else{
        with(oEnterPortal){instance_destroy()}
    }
}
else if keyboard_check(oPlayer.create_exit_portal) &amp;&amp; !instance_exists(oShootPortal){
    portal_check = 1;
    if !instance_exists(oExitTeleport){
        instance_create(x,y,oShootPortal)
    }
    else{
        with(oExitTeleport){instance_destroy()}
    }
}


if keyboard_check(oPlayer.up) &amp;&amp; !place_meeting(x,y-10, oThings){
    direction = 90; 
    //sprite_index = sPlayer

    oPlayer.moving = true;
    }
 if keyboard_check(oPlayer.down) &amp;&amp; !place_meeting(x,y+10, oThings){
    direction = 270; 
    //sprite_index = sPlayerDown;

    oPlayer.moving = true;  
    }
 if keyboard_check(oPlayer.right)&amp;&amp; !place_meeting(x+10,y, oThings){
    direction = 0;     
    //sprite_index = sPlayerRight;

    oPlayer.moving = true;
    }
 if keyboard_check(oPlayer.left) &amp;&amp; !place_meeting(x-10,y, oThings){
    direction = 180; 
    //sprite_index = sPlayerLeft;

    oPlayer.moving = true;
    }
    



if oPlayer.moving{
    speed=oPlayer.spd;
    if speedboost {
        if speedboosttime &lt;= sbt{
            speed = 10   
        }
        else{
            speed = oPlayer.spd;
            speedboost = false;   
        }
    }
}
else{
    speed = 0;
     if speedboost {
        if speedboosttime &gt; sbt{
            speedboost = false;
        
        }     
    }
}

if speedboost{
    speedboosttime+=1
}

if shootfour{
    if shootfourtime &gt;= sft{
     shootfour = false;
     normal = true;
     }
     shootfourtime +=1
}

time += 1

}
if oPlayer.time &gt;= 5400  || oPlayer.hp &lt; 1 || survivors == 0{
        with(oEnemy){
            instance_destroy()
        }
        with (oAttack){
        instance_destroy()
        }
        oGen.active = false;
        oPlayer.active = false;
        oPlayer.speed = 0
    
        
}
if keyboard_check(ord("R")){
            game_restart();
        }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
